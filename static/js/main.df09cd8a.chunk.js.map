{"version":3,"sources":["body.js","Appcopy.js","serviceWorker.js","index.js"],"names":["intro","id","className","src","alt","href","data-wow-delay","mms","upload","event","setState","button","target","files","size","cal1","parseFloat","toFixed","console","log","sizeimg","image","URL","createObjectURL","state","setTimeout","newColor","RGB","red","document","getElementById","value","blue","green","size2","save","newsave","jog","data","toDataURL","length","calculate","canvassize","slider","canvas","putimage","getContext","canvastemp","putimagetemp","img","Image","label","onload","width","height","drawImage","i","imgData","getImageData","combine","R","G","B","putImageData","image3","image2","change","preventDefault","name","Color","style","margin","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","textAlign","this","min","step","max","onChange","Container","display","onClick","data-wow-duration","paddingTop","leftImageLabel","leftImage","rightImage","rightImageLabel","justifyContent","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df09cd8a.chunk.js","sourcesContent":["import React from 'react';\r\n// import './style.css';\r\n\r\nvar intro = function(){\r\n    return(\r\n        <section id=\"team\">\r\n  <div className=\"container\">\r\n    <div className=\"section-header wow fadeInUp\">\r\n      <h3>Team</h3>\r\n      <p>Multimedia Project</p>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-3 col-md-6 wow fadeInUp\">\r\n        <div className=\"member\">\r\n          <img src=\"syed1.jpg\" className=\"img-fluid rounded-circle\" alt=\"\" />\r\n          <div className=\"member-info\">\r\n            <div className=\"member-info-content\">\r\n              <h4>Syed Ahmed</h4>\r\n              <span>Team Member#01</span>\r\n              <div className=\"social\">\r\n                <a href><i className=\"fa fa-twitter\" /></a>\r\n                <a href><i className=\"fa fa-facebook\" /></a>\r\n                <a href><i className=\"fa fa-google-plus\" /></a>\r\n                <a href><i className=\"fa fa-linkedin\" /></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-3 col-md-6 wow fadeInUp\" data-wow-delay=\"0.1s\">\r\n        <div className=\"member\">\r\n          <img src=\"ansur2.jpg\" className=\"img-fluid rounded-circle\" alt=\"\" />\r\n          <div className=\"member-info\">\r\n            <div className=\"member-info-content\">\r\n              <h4>Syed Ansur Mehdi</h4>\r\n              <span>Team Member#02</span>\r\n              <div className=\"social\">\r\n                <a href><i className=\"fa fa-twitter\" /></a>\r\n                <a href><i className=\"fa fa-facebook\" /></a>\r\n                <a href><i className=\"fa fa-google-plus\" /></a>\r\n                <a href><i className=\"fa fa-linkedin\" /></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-3 col-md-6 wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n        <div className=\"member\">\r\n          <img src=\"yousra1.jpg\" className=\"img-fluid rounded-circle\" alt=\"\" />\r\n          <div className=\"member-info\">\r\n            <div className=\"member-info-content\">\r\n              <h4>Yousra Khan</h4>\r\n              <span>Team Member#03</span>\r\n              <div className=\"social\">\r\n                <a href><i className=\"fa fa-twitter\" /></a>\r\n                <a href><i className=\"fa fa-facebook\" /></a>\r\n                <a href><i className=\"fa fa-google-plus\" /></a>\r\n                <a href><i className=\"fa fa-linkedin\" /></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-3 col-md-6 wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n        <div className=\"member\">\r\n          <img src=\"hassan1.jpg\" className=\"img-fluid rounded-circle\" alt=\"\" />\r\n          <div className=\"member-info\">\r\n            <div className=\"member-info-content\">\r\n              <h4>Hassan Riaz</h4>\r\n              <span>Team Member#04</span>\r\n              <div className=\"social\">\r\n                <a href><i className=\"fa fa-twitter\" /></a>\r\n                <a href><i className=\"fa fa-facebook\" /></a>\r\n                <a href><i className=\"fa fa-google-plus\" /></a>\r\n                <a href><i className=\"fa fa-linkedin\" /></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n    )\r\n}\r\nexport default intro;","import React from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport ReactCompareImage from 'react-compare-image';\r\nimport Intro from './body';\r\n\r\nclass mms extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            image: null,\r\n            sizeimg: null,\r\n            label: false,\r\n            Color: \"Grey\",\r\n            jog:false,\r\n            newsave:\"\",\r\n            canvassize: \"\",\r\n            button: false,\r\n            R:0.3, G:0.5, B:0.1,\r\n            slider: false,\r\n            image2: null,\r\n\r\n        }\r\n    }\r\n    upload=(event)=>{\r\n        this.setState({button: true})\r\n        if (event.target.files && event.target.files[0]) {\r\n            var size=event.target.files[0].size;\r\n            var cal=size/1000;\r\n            var mb=cal/1024;\r\n            var cal1=parseFloat(mb).toFixed(3);\r\n            console.log(cal1);\r\n            this.setState({ sizeimg: cal1,\r\n              image: URL.createObjectURL(event.target.files[0],)\r\n            } , ()=>{\r\n                console.log(this.state.image)\r\n            });\r\n            setTimeout(()=>{\r\n                this.newColor()\r\n            },100)\r\n          }\r\n       \r\n    }\r\n\r\n    RGB=()=>{\r\n        var red=document.getElementById(\"Red\").value;\r\n        var blue=document.getElementById(\"blue\").value;\r\n        var green=document.getElementById(\"green\").value;\r\n        var array={red,green,blue};\r\n        return array;\r\n    }\r\n    \r\n    size2=(event)=>{\r\n     \r\n        setTimeout(()=>{\r\n            let save= this.state.newsave;\r\n        console.log(save);\r\n        this.setState({jog: true});\r\n        let data = save.toDataURL(\"image/jpeg\",0.7);\r\n        // let Window = window.open('about:blank', 'image from canvas');\r\n        // Window.document.write(\"<img src='\"+data+\"' alt='from canvas'/>\");\r\n        console.log(data.length);\r\n        let size = (data.length/1000)/1024;\r\n        console.log(size);\r\n        let calculate=parseFloat(size).toFixed(3);\r\n        console.log(calculate);\r\n        this.setState({canvassize: calculate});\r\n\r\n        },100);\r\n   \r\n        console.log(\"loadingouter\")\r\n        \r\n    }\r\n\r\n    newColor=()=>{\r\n        \r\n        this.setState({slider: true});\r\n        var canvas=document.getElementById(\"canvas\");\r\n        var putimage= canvas.getContext(\"2d\");\r\n        var canvastemp=document.getElementById(\"canvas1\");\r\n        var putimagetemp= canvastemp.getContext(\"2d\");\r\n        let img=new Image();\r\n        img.src=this.state.image;\r\n        this.setState({label: true});\r\n        img.onload=()=>{\r\n                canvas.width=img.width;\r\n                canvas.height=img.height;\r\n                putimage.drawImage(img,0,0);\r\n                let image=putimage.getImageData(0,0,canvas.width,canvas.height);\r\n        let imgData=image;\r\n        console.log(imgData);\r\n        \r\n        var i;\r\n        for (i = 0; i < imgData.data.length; i += 4) {\r\n          var red1 = ((this.state.R * imgData.data[i]));\r\n          var green1=(this.state.G * imgData.data[i+1]);\r\n          var blue1=(this.state.B * imgData.data[i+2]);\r\n          let combine = (red1 + green1 + blue1);\r\n          //console.log(red1, green1, blue1)\r\n          imgData.data[i] = combine;\r\n          imgData.data[i + 1] = combine;\r\n          imgData.data[i + 2] = combine;\r\n          imgData.data[i + 3] = imgData.data[i + 3];\r\n          }\r\n\r\n        canvastemp.width=img.width;\r\n        canvastemp.height=img.height;\r\n        putimagetemp.putImageData(imgData, 0, 0);\r\n\r\n        let image3 = canvastemp.toDataURL();\r\n        \r\n        \r\n        this.setState({newsave: canvastemp, image2:image3});\r\n\r\n        }\r\n     \r\n        this.size2();\r\n\r\n    }\r\n    \r\n    change=(event)=>{\r\n        event.preventDefault();\r\n        //console.log(event);\r\n        // this.setState({R: event.target.value},console.log(this.state.R));\r\n        // this.setState({G: event.target.value}, console.log(this.state.G));\r\n        if(this.state.slider===true){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            }, this.newColor())\r\n        }\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n               \r\n                <nav className=\"navbar navbar-dark bg-dark\">\r\n                {/* Navbar brand */}\r\n                <div style={{margin: 'auto'}}>\r\n                <a className=\"navbar-brand\" href=\"#\">MMS Project</a>\r\n               \r\n                {/* Collapse button */}\r\n                <button className=\"navbar-toggler toggler-example\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\" aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"dark-blue-text\"><i className=\"fas fa-bars fa-1x\" /></span></button>\r\n                {/* Collapsible content */}\r\n                \r\n                </div>\r\n                <div className=\"collapse navbar-collapse\" style={{textAlign: 'center'}} id=\"navbarSupportedContent1\">\r\n                <label className=\"r\">R</label><input name=\"R\" value={this.state.R} id=\"Red\" type=\"range\" min=\"0\"  step=\"0.1\"  max=\"1\" onChange={this.change} className=\"custom-range\"></input>\r\n                <br></br>\r\n                <label className=\"g\">G</label><input name=\"G\" value={this.state.G} id=\"green\" type=\"range\" min=\"0\"  step=\"0.1\"  max=\"1\" onChange={this.change} className=\"custom-range\"></input>\r\n                <br></br>\r\n                <label className=\"b\">B</label><input name=\"B\" value={this.state.B} id=\"blue\" type=\"range\" min=\"0\"  step=\"0.1\" max=\"1\" onChange={this.change} className=\"custom-range\"></input>\r\n                </div>\r\n                {/* Collapsible content */}\r\n\r\n                </nav>\r\n\r\n                {/* <Container fluid style={{backgroundColor:this.state.Color}} className=\"one\">\r\n                    <h3 className=\"textp\">MMS Project!</h3>\r\n                <label className=\"r\">R</label><input name=\"R\" value={this.state.R} id=\"Red\" type=\"range\" min=\"0\"  step=\"0.1\"  max=\"1\" onChange={this.change} className=\"custom-range\"></input>\r\n                <br></br>\r\n                <label className=\"g\">G</label><input name=\"G\" value={this.state.G} id=\"green\" type=\"range\" min=\"0\"  step=\"0.1\"  max=\"1\" onChange={this.change} className=\"custom-range\"></input>\r\n                <br></br>\r\n                <label className=\"b\">B</label><input name=\"B\" value={this.state.B} id=\"blue\" type=\"range\" min=\"0\"  step=\"0.1\" max=\"1\" onChange={this.change} className=\"custom-range\"></input>\r\n\r\n                </Container> */}\r\n\r\n                <Container className=\"two\">\r\n                    <label className=\"btn btn-lg btn-danger file\">Upload<input id=\"file\" type=\"file\" style={{display: \"none\"}} onChange={this.upload}></input></label>\r\n                    {/* { this.state.button===true ? <Button className=\"btn btn-lg btn-success\" style={{marginLeft: '5px', marginBottom: '8px'}} onClick={this.newColor}>Grayscale</Button>: null} */}\r\n                </Container>\r\n                \r\n                <Container  className=\"three\">\r\n                    {/* <div style={{display: \"flex\"}}>\r\n                    <div> \r\n                    { this.state.button===true ? <h3>Original</h3>: null}\r\n                    <img className=\"can\"  src={this.state.image} alt=\"\"></img>\r\n                    { this.state.button===true ? <h5>FileSize = {this.state.sizeimg}Mb</h5>: null}\r\n                    </div>\r\n                    <div>\r\n                    { this.state.label===true ? <h3>Grayscale</h3>: null}\r\n                    { this.state.jog===true ? <h5 >FileSize = {this.state.canvassize}Mb</h5>: null}\r\n                    </div>\r\n                    \r\n                    </div> */}\r\n                    <canvas style={{display: \"none\"}} id=\"canvas\" className=\"can\" onClick={()=>{this.newColor()}}></canvas>\r\n                    <canvas style={{display: \"none\"}} id=\"canvas1\" className=\"can\"></canvas>\r\n\r\n\r\n                    <div style={{textAlign: \"center\"}}> \r\n                    {/* { this.state.button===true ? <Button  onClick={this.newColor}>Convert to Grayscale!</Button>: null} */}\r\n                    </div>\r\n                    <Container className='wow zoomIn' data-wow-duration=\"4s\" data-wow-delay=\"1.5s\" style={{width: '800px', paddingTop: '4px'}}>\r\n                    { this.state.label===true ? <ReactCompareImage leftImageLabel=\"Original\" leftImage={this.state.image} rightImage={this.state.image2} rightImageLabel=\"GrayScale\" />: null}\r\n                    <div style={{display: \"flex\", justifyContent: 'space-between'}}>\r\n                    { this.state.jog===true ? <h5>FileSize = {this.state.sizeimg}mb</h5>: null}\r\n                    { this.state.jog===true ? <h5>FileSize = {this.state.canvassize}mb</h5>: null}\r\n                    </div>\r\n                    \r\n                </Container>\r\n\r\n                </Container>\r\n                \r\n                <Intro />\r\n                \r\n                </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default mms;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Appcopy';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}